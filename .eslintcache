[{"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\index.js":"1","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\App.js":"2","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\reportWebVitals.js":"3","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\fbConfig.js":"4","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\frontPage.js":"5","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\secondPage.js":"6","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\commentry.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":240,"mtime":1611425254826,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":508,"mtime":1613923190178,"results":"12","hashOfConfig":"9"},{"size":16121,"mtime":1613923180833,"results":"13","hashOfConfig":"9"},{"size":1824,"mtime":1612982640033,"results":"14","hashOfConfig":"9"},{"size":696,"mtime":1612981955594,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1t0ot5n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\index.js",[],["34","35"],"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\App.js",["36"],"import React, { useEffect } from 'react';\nimport Frontpage from './components/frontPage'\n\nfunction App() {\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Segoe UI' }}>\n      <Frontpage />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\reportWebVitals.js",[],"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\fbConfig.js",[],"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\frontPage.js",["37","38","39"],"import React, { useState } from 'react';\r\nimport { Grid, Button, IconButton, TextField, Select, MenuItem, FormHelperText,Fab } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport './frontpage.css';\r\nimport {fb} from '../fbConfig'\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport SecondPage from './secondPage';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport default function FrontPage() {\r\n   const [matchTitle, setMatchTitle] = useState('wait')\r\n   const [teamA, setTeamA] = useState(\"wait\")\r\n   const [TeamB, setTeamB] = useState(\"wait\")\r\n   const [flagA, setFlagA] = useState(\"wait\")\r\n   const [flagB, setFlagB] = useState(\"wait\")\r\n   const [bowler,setBowler] = useState({\r\n      name:'wait',\r\n      balls:0,\r\n      wicket:2\r\n   })\r\n   const [live,setLive] = useState(false)\r\n   const [scoreA, setScoreA] = useState(0)\r\n   const [wickA, setWickA] = useState(0)\r\n   const [scoreB, setScoreB] = useState(0)\r\n   const [wickB, setWickB] = useState(0)\r\n   const [players, setPlayers] = useState([])\r\n   const [batsmanCurr, setBatsmanCurr] = useState(\"wait\")\r\n   const [batsman2, setBatsman2] = useState(\"wait\")\r\n   const [teamAovers,setTeamAOvers] = useState(0.0)\r\n   const [teamBovers,setTeamBOvers] = useState(0.0)\r\n   const [cbm, setcbm] = useState({\r\n      runs: 0,\r\n      balls: 0\r\n   })\r\n   const [teamSwap, setTeamSwap] = useState(false)\r\n   const [bm, setbm] = useState({\r\n      runs: 0,\r\n      balls: 0\r\n   })\r\n   const [notepad, setNotepad] = useState(\"\")\r\n\r\n   const titleClick = () => {\r\n      \r\n   }\r\n   const teamNameClick = () => {\r\n\r\n   }\r\n   const teamFlagClick = () => {\r\n\r\n   }\r\n   const sIncre = () => {\r\n      setScoreA(scoreA + 1)\r\n   }\r\n   const sDec = () => {\r\n      setScoreA(scoreA - 1)\r\n   }\r\n   const wInc = () => {\r\n      setWickA(wickA + 1)\r\n   }\r\n   const wDec = () => {\r\n      setWickA(wickA - 1)\r\n   }\r\n   const handleNotepad = () => {\r\n      setPlayers(notepad.split(','))\r\n\r\n   }\r\n   const handleAll = () =>{\r\n     const myData = fb.database().ref('appData');\r\n     myData.set({\r\n        teamAName:teamA,\r\n        teamBName:TeamB,\r\n        title:matchTitle,\r\n        flagA:flagA,\r\n        flagB:flagB,\r\n        scoreB:`${scoreB}/${wickB}`,\r\n        scoreA:`${scoreA}/${wickA}`,\r\n        currBat:{\r\n           pName:batsmanCurr,\r\n           score:cbm.runs,\r\n           balls:cbm.balls\r\n        },\r\n        batsMan2:{\r\n           pname:batsman2,\r\n           score:bm.runs,\r\n           balls:bm.balls\r\n        },\r\n        overA:String(parseInt(teamAovers/6))+\".\"+String(parseInt(teamAovers%6)),\r\n        overB:String(parseInt(teamBovers/6))+\".\"+String(parseInt(teamBovers%6)),\r\n        bowler:{\r\n           name:bowler.name,\r\n           balls:String(parseInt(bowler.balls/6))+\".\"+String(parseInt(bowler.balls%6)),\r\n           wicket:bowler.wicket\r\n        },\r\n        live:live\r\n\r\n     })\r\n   }\r\n   \r\n   const swap = () => {\r\n      const a = batsmanCurr\r\n      setBatsmanCurr(batsman2)\r\n      setBatsman2(a)\r\n      const arr = cbm\r\n      setcbm(bm)\r\n      setbm(arr)\r\n   }\r\n   const CurrentTeam = () => {\r\n      if (teamSwap) {\r\n         return 'Team B'\r\n      }\r\n      else {\r\n         return 'Team A'\r\n      }\r\n   }\r\n   const toogleLive = () =>{\r\n         setLive((prev)=>!prev)\r\n   }\r\n   return (\r\n      <Grid container>\r\n         <Fab onClick={()=>handleAll()} color=\"primary\" aria-label=\"add\"  style={{position:'fixed',right:20,bottom:20,backgroundColor:'teal'}}>\r\n        <PublishIcon />\r\n        \r\n      </Fab>\r\n      \r\n         <Grid item xs={12} sm={6} md={6} lg={6}>\r\n         <FormControlLabel\r\n        control={<Switch size=\"small\"  checked={live} onChange={toogleLive}/>}\r\n        label=\"Live\"\r\n         />\r\n            \r\n         <Button fullWidth style={{backgroundColor:'teal',color:'white',marginTop:20}} onClick={()=>setTeamSwap(!teamSwap)}>Team Swap current team = <CurrentTeam />\r\n            \r\n         </Button>\r\n            <div style={{ display: 'flex', flexDirection: 'column', padding: 20 }}>\r\n               <div className=\"matchTitle\">\r\n                  <input type=\"text\" name=\"title\" onChange={(e) => { setMatchTitle(e.target.value) }} placeholder=\"match title\" />\r\n                  <IconButton style={{ color: 'teal' }} onClick={() => { titleClick() }}><CheckIcon /></IconButton>\r\n               </div>\r\n               <div style={{ display: 'flex', flexDirection: 'row', width: '100%', marginTop: 20 }}>\r\n                  <div className=\"team\">\r\n                     <input type=\"text\" name=\"title\" onChange={(e) => { setTeamA(e.target.value) }} placeholder=\"TeamA\" />\r\n\r\n                  </div>\r\n                  <div className=\"team\" style={{ marginLeft: 5 }}>\r\n                     <input type=\"text\" name=\"title\" onChange={(e) => { setTeamB(e.target.value) }} placeholder=\"TeamB\" />\r\n                  </div>\r\n                  <IconButton style={{ color: 'teal' }}><ArrowForwardIcon /></IconButton>\r\n               </div>\r\n               <div style={{ display: 'flex', flexDirection: 'row', width: '100%', marginTop: 20 }}>\r\n                  <div className=\"team\">\r\n                     <input type=\"text\" name=\"title\" onChange={(e) => { setFlagA(e.target.value) }} placeholder=\"Team A flag\" />\r\n\r\n                  </div>\r\n                  <div className=\"team\" style={{ marginLeft: 5 }}>\r\n                     <input type=\"text\" name=\"title\" onChange={(e) => { setFlagB(e.target.value) }} placeholder=\"Team B flag\" />\r\n                  </div>\r\n                  <IconButton style={{ color: 'teal' }}><ArrowForwardIcon /></IconButton>\r\n               </div>\r\n               <div style={{ marginTop: 20, fontSize: 16, border: '2px solid teal', display: 'flex', borderRadius: 2 }}>\r\n\r\n                  <div style={{ width: '45%', marginLeft: 20 }}>\r\n                     Score TeamA\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => sDec()}><RemoveIcon /></IconButton>\r\n                     <input type=\"text\" value={scoreA} style={{ outline: 'none',textAlign:'center', border: 'none', height: 20, width: 40 }} />\r\n                     <IconButton style={{ color: 'teal' }}  onClick={() => sIncre()}><AddIcon /></IconButton>\r\n                  </div>\r\n                  <div>\r\n                     Wickets\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => wDec()}><RemoveIcon /></IconButton>\r\n                     <input type=\"text\" value={wickA} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => wInc()}><AddIcon /></IconButton>\r\n                  </div>\r\n                  <div style={{ float: 'right' }}>\r\n                     <IconButton style={{ color: 'teal' }} ><SendIcon /></IconButton>\r\n                  </div>\r\n\r\n               </div>\r\n               <div style={{ marginTop: 20, fontSize: 16, border: '2px solid teal', display: 'flex', borderRadius: 2 }}>\r\n\r\n                  <div style={{ width: '45%', marginLeft: 20 }}>\r\n                     Score TeamB\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => setScoreB(scoreB - 1)}><RemoveIcon /></IconButton>\r\n                     <input type=\"text\" value={scoreB} style={{textAlign:'center', outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => setScoreB(scoreB + 1)}><AddIcon /></IconButton>\r\n                  </div>\r\n                  <div>\r\n                     Wickets\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => setWickB(wickB - 1)}><RemoveIcon /></IconButton>\r\n                     <input type=\"text\" value={wickB} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => setWickB(wickB + 1)}><AddIcon /></IconButton>\r\n                  </div>\r\n                  <div style={{ float: 'right' }}>\r\n                     <IconButton style={{ color: 'teal' }} ><SendIcon /></IconButton>\r\n                  </div>\r\n\r\n\r\n               </div>\r\n               <div>\r\n               <div style={{ marginTop: 20, fontSize: 16, border: '2px solid teal', display: 'flex', borderRadius: 2 }}>\r\n\r\n<div style={{ width: '40%', marginLeft: 20,fontSize:12 }}>\r\n   TeamA over\r\n   <IconButton style={{ color: 'teal' }}  onClick ={()=>setTeamAOvers(teamAovers-1)}><RemoveIcon /></IconButton>\r\n   <input type=\"text\" value={String(parseInt(teamAovers/6))+\".\"+String(parseInt(teamAovers%6))} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n   <IconButton style={{ color: 'teal' }} onClick ={()=>setTeamAOvers(teamAovers+1)}><AddIcon /></IconButton>\r\n</div>\r\n<div style={{ width: '40%',fontSize:12  }}>\r\n   TeamB over\r\n   <IconButton style={{ color: 'teal' }} onClick ={()=>setTeamBOvers(teamBovers+1)} ><RemoveIcon /></IconButton>\r\n   <input type=\"text\" value={String(parseInt(teamBovers/6))+\".\"+String(parseInt(teamBovers%6))} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n   <IconButton style={{ color: 'teal' }} onClick ={()=>setTeamBOvers(teamBovers+1)}><AddIcon /></IconButton>\r\n</div>\r\n<div style={{ float: 'right' }}>\r\n   <IconButton style={{ color: 'teal' }}><SendIcon /></IconButton>\r\n</div>\r\n\r\n\r\n</div>\r\n               \r\n               </div>\r\n               <div style={{ marginTop: 20 }}>\r\n                  <TextField\r\n                     id=\"standard-multiline-flexible\"\r\n                     label=\"NotePad\"\r\n                     fullWidth\r\n                     multiline\r\n                     rowsMax={10}\r\n                     value={notepad}\r\n                     onChange={(e) => setNotepad(e.target.value)}\r\n                  />\r\n                  <Button fullWidth style={{backgroundColor:'teal',color:'white'}} onClick={() => handleNotepad()}>Submit</Button>\r\n               </div>\r\n               <div style={{ display: 'flex' }}>\r\n                  <div style={{ display: \"flex\", flexDirection: 'column' }}>\r\n                     <Select\r\n                        style={{ width: 200 }}\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={batsmanCurr}\r\n                        onChange={(e) => setBatsmanCurr(e.target.value)}\r\n                     >\r\n                        {\r\n                           players.map((item, index) => {\r\n                              return <MenuItem value={item} key=\"index\">{item}</MenuItem>\r\n                           })\r\n                        }\r\n                        <FormHelperText>CurrentBatsMan</FormHelperText>\r\n                     </Select>\r\n                     <div>runs\r\n                     <IconButton style={{ color: 'teal' }} onClick={() => {setcbm({runs:cbm.runs-1,balls:cbm.balls})\r\n                     if(teamSwap) {setScoreB(scoreB-1)}else{setScoreA(scoreA-1)}\r\n                  }}><RemoveIcon /></IconButton>\r\n                        <input type=\"text\" value={cbm.runs} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n                        <IconButton style={{ color: 'teal' }}  onClick={() => {setcbm({runs:cbm.runs+1,balls:cbm.balls})\r\n                        if(teamSwap) {setScoreB(scoreB+1)}else{setScoreA(scoreA+1)}\r\n                     }}><AddIcon /></IconButton>\r\n                     </div>\r\n                     <div>balls\r\n                     <IconButton onClick={() => {setcbm({runs:cbm.runs,balls:cbm.balls-1})\r\n                  if(teamSwap){setTeamBOvers(teamBovers-1)}else{setTeamAOvers(teamAovers-1)}\r\n                  }}><RemoveIcon /></IconButton>\r\n                        <input type=\"text\" value={String(parseInt(cbm.balls/6))+\".\"+String(parseInt(cbm.balls%6))} style={{ textAlign:'center',outline: 'none', border: 'none', height: 20, width: 40 }} />\r\n                        <IconButton style={{ color: 'teal' }} onClick={() => {setcbm({runs:cbm.runs,balls:cbm.balls+1})\r\n                        if(teamSwap){setTeamBOvers(teamBovers+1)}else{setTeamAOvers(teamAovers+1)}\r\n                     }}><AddIcon /></IconButton>\r\n                     </div>\r\n                     <div><IconButton style={{ color: 'teal' }} onClick ={()=>{setcbm({runs:0,balls:0})}}>\r\n                        <ReplayIcon /></IconButton></div>\r\n                  </div>\r\n\r\n                  <IconButton style={{width:150,height:150,color:'teal'}}onClick={() => { swap() }}><CachedIcon /></IconButton>\r\n                  <div style={{ display: \"flex\", flexDirection: 'column' }}>\r\n                     <Select\r\n                        style={{ width: 200 }}\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={batsman2}\r\n                        onChange={(e) => setBatsman2(e.target.value)}\r\n                     >\r\n                        {\r\n                           players.map((item, index) => {\r\n                              return <MenuItem value={item} key=\"index\">{item}</MenuItem>\r\n                           })\r\n                        }\r\n                        <FormHelperText>2nd batsman</FormHelperText>\r\n                     </Select>\r\n\r\n                     <div>score --\r\n                   \r\n                        {bm.runs}\r\n                       \r\n                     </div>\r\n                     <div>balls --\r\n                   \r\n                     {String(parseInt(bm.balls/6))+\".\"+String(parseInt(bm.balls%6))}\r\n                       \r\n                     </div>\r\n                     <div><IconButton style={{ color: 'teal' }} onClick ={()=>{setbm({runs:0,balls:0})}}>\r\n                        <ReplayIcon /></IconButton></div>\r\n                  </div>\r\n                  \r\n               </div>\r\n               <div>\r\n               <Select\r\n                        style={{ width: 200 }}\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        value={bowler.name}\r\n                        onChange={(e) => setBowler({...bowler,name:e.target.value})}\r\n                     >\r\n                        {\r\n                           players.map((item, index) => {\r\n                              return <MenuItem value={item} key=\"index\">{item}</MenuItem>\r\n                           })\r\n                        }\r\n                        <FormHelperText>Bowler</FormHelperText>\r\n                     </Select>\r\n                     B <input type=\"text\" \r\n                     onChange={(e)=>{\r\n                        setBowler({...bowler,balls:e.target.value})\r\n                     }}\r\n                     style={{width:40,outline:'none',border:'2px solid teal',height:40,marginRight:20}} />\r\n                     W <input type=\"text\" \r\n                     onChange={(e)=>{\r\n                        setBowler({...bowler,wicket:e.target.value})\r\n                     }}\r\n                     style={{width:40,outline:'none',border:'2px solid teal',height:40,marginRight:20}} />\r\n                     <IconButton style={{color:'teal'}} ><CheckIcon /></IconButton>\r\n\r\n               </div>\r\n               \r\n               <Button fullWidth style={{backgroundColor:'teal',color:'white',marginTop:20}} onClick={() => handleNotepad()}>Submit</Button>\r\n               \r\n\r\n            </div>\r\n\r\n         </Grid>\r\n         <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                        <SecondPage />\r\n         </Grid>\r\n      </Grid >\r\n   )\r\n}\r\n","C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\secondPage.js",[],"C:\\Users\\sunny\\Desktop\\react-native\\console\\console-cric\\src\\components\\commentry.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":15,"column":8,"nodeType":"48","messageId":"49","endLine":15,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":53,"column":10,"nodeType":"48","messageId":"49","endLine":53,"endColumn":23},{"ruleId":"46","severity":1,"message":"52","line":56,"column":10,"nodeType":"48","messageId":"49","endLine":56,"endColumn":23},{"ruleId":"42","replacedBy":"53"},{"ruleId":"44","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'teamNameClick' is assigned a value but never used.","'teamFlagClick' is assigned a value but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]